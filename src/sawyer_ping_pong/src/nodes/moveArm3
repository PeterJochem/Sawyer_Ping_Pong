#!/usr/bin/env python

import sys
import copy
import rospy
import moveit_commander
import moveit_msgs.msg
import geometry_msgs.msg
from math import pi
from std_msgs.msg import String
from moveit_commander.conversions import pose_to_list
import numpy as np
import math
import numpy as np
from tf.transformations import euler_from_quaternion, quaternion_from_euler


class MoveArm(object):
	def __init__(self):
		self.robot = moveit_commander.RobotCommander()
		self.scene = moveit_commander.PlanningSceneInterface()
		self.group_name = "right_arm"
		self.move_group = moveit_commander.MoveGroupCommander(self.group_name)
		
	### Finding the x-y coordinates for the forward motion ###
	
        ### checks the current state of the robot ###
	def current_state(self):
		current_state = self.robot.get_current_state() 
		return current_state

	### returns to the home configuration ###
	

	def return_home(self):
		joint_goal = self.move_group.get_current_joint_values()
		
                #joint_goal[0]=0.0
		#joint_goal[1]=0.0
		#joint_goal[2]=0.0
		#joint_goal[3]=np.pi/2
		#joint_goal[4]=0.0
		#joint_goal[5]=0.0
		#joint_goal[6] = -np.pi/2
		joint_goal = [0, 0, 0, 0, 0, 0, 0]
                
                self.move_group.go(joint_goal, wait=True)
		self.move_group.stop()

rospy.sleep(5)
myMoveArm = MoveArm()
myMoveArm.return_home()


