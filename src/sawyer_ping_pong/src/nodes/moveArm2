#!/usr/bin/env python


import sys
import rospy
import copy
import baxter_interface
import moveit_commander
import moveit_msgs.msg
import geometry_msgs.msg
from geometry_msgs.msg import Point, Quaternion, Pose, PoseStamped
from std_msgs.msg import String, Bool
from moveit_commander.conversions import pose_to_list
from tf.transformations import quaternion_from_euler

import roslib
import actionlib


class moveArm2:

    

    def __init__(self):

		curr_right_pose = self.right_group.get_current_pose().pose

		right_pose_goal = geometry_msgs.msg.Pose()

		right_pose_goal.orientation.x = -0.269023
		right_pose_goal.orientation.y = 0.807661
		right_pose_goal.orientation.z = 0.224343
		right_pose_goal.orientation.w = 0.474321

		right_pose_goal.position.x = 0.152432
		right_pose_goal.position.y = -0.39597
		right_pose_goal.position.z = -0.138595
		

		plan_right, fraction_right , plan_success= plan_cartesian_path(curr_right_pose, right_pose_goal, self.right_group)

		print("The fraction of right hand path covered")

		# display plan in rviz
		display_trajectory(plan_right, self.robot, self.display_trajectory_publisher)

		rospy.sleep(2)


	

		print("============ Press `Enter` to move final configuration ============")
		raw_input()

		try:
			# execute path
			self.right_group.execute(plan_right, wait=True)
			self.right_group.stop()
			self.right_group.clear_pose_targets()

			rospy.sleep(2)

			return True
		except (rospy.ServiceException, rospy.ROSException), e:
			rospy.loginfo("Service call failed: %s" % (e,))
			return False
